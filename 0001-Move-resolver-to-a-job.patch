From a05d4df0b8da8d7c1e3d3baffb464fdafccc5196 Mon Sep 17 00:00:00 2001
From: Simon Bihel <simon.bihel@spruceid.com>
Date: Tue, 24 May 2022 12:56:12 +0100
Subject: [PATCH] Move resolver to a job

---
 api/indexer/.python-version                   |  1 +
 api/indexer/Dockerfile                        |  3 +-
 api/indexer/dipdup.yml                        | 38 ++++++++--
 api/indexer/poetry.lock                       | 70 +++++++++++--------
 api/indexer/pyproject.toml                    |  2 +-
 api/indexer/tzprofiles_indexer/cli.py         | 42 -----------
 .../handlers/on_factory_origination.py        |  8 ++-
 .../tzprofiles_indexer/handlers/on_update.py  | 11 ++-
 .../tzprofiles_indexer/hooks/resolver.py      | 35 ++++++++++
 api/indexer/tzprofiles_indexer/models.py      |  2 +
 .../tzprofiles_indexer/sql/resolver/.keep     |  0
 11 files changed, 132 insertions(+), 80 deletions(-)
 create mode 100644 api/indexer/.python-version
 delete mode 100644 api/indexer/tzprofiles_indexer/cli.py
 create mode 100644 api/indexer/tzprofiles_indexer/hooks/resolver.py
 create mode 100644 api/indexer/tzprofiles_indexer/sql/resolver/.keep

diff --git a/api/indexer/.python-version b/api/indexer/.python-version
new file mode 100644
index 0000000..8d7f852
--- /dev/null
+++ b/api/indexer/.python-version
@@ -0,0 +1 @@
+3.10.4
diff --git a/api/indexer/Dockerfile b/api/indexer/Dockerfile
index 86102d6..c396f68 100644
--- a/api/indexer/Dockerfile
+++ b/api/indexer/Dockerfile
@@ -6,4 +6,5 @@ RUN inject_pyproject
 
 COPY tzprofiles_indexer tzprofiles_indexer
 COPY dipdup.yml dipdup.docker.yml ./
-ENTRYPOINT ["python", "-m", "tzprofiles_indexer.cli"]
\ No newline at end of file
+ENTRYPOINT ["poetry", "run", "dipdup"]
+CMD ["-c", "dipdup.yml", "run"]
diff --git a/api/indexer/dipdup.yml b/api/indexer/dipdup.yml
index 2df0c73..117ef68 100644
--- a/api/indexer/dipdup.yml
+++ b/api/indexer/dipdup.yml
@@ -1,6 +1,22 @@
 spec_version: 1.2
 package: tzprofiles_indexer
 
+database:
+  kind: postgres
+  host: ${PSQL_HOST:-db}
+  port: 5432
+  user: dipdup
+  password: ${POSTGRES_PASSWORD:-changeme}
+  database: dipdup
+
+hasura:
+  url: ${HASURA_URL:-http://hasura:8080}
+  admin_secret: ${ADMIN_SECRET:-changeme}
+
+# database:
+#   kind: sqlite
+#   path: tzprofiles.sqlite3
+
 contracts:
   tzprofile_old:
     address: KT1KsmdYxuJHCMqLRX1PH7JJeXvXaMeicEa7
@@ -47,16 +63,28 @@ indexes:
         pattern:
           - type: origination
             similar_to: tzprofile
-      # - callback: on_factory_origination
-      #   pattern:
-      #     - type: origination
-      #       similar_to: tzprofile_old
+      - callback: on_factory_origination
+        pattern:
+          - type: origination
+            similar_to: tzprofile_old
+
+hooks:
+  resolver:
+    callback: resolver
+    atomic: false
+
+jobs:
+  resolver:
+    hook: resolver
+    interval: 10
 
 advanced:
-  postpone_jobs: True
+  # postpone_jobs: True
   early_realtime: True
   merge_subscriptions: True
   metadata_interface: True
+  reindex:
+    rollback: ignore
 
 prometheus:
   host: 0.0.0.0
diff --git a/api/indexer/poetry.lock b/api/indexer/poetry.lock
index 3840300..c606dd5 100644
--- a/api/indexer/poetry.lock
+++ b/api/indexer/poetry.lock
@@ -53,7 +53,7 @@ typing_extensions = ">=3.7.2"
 
 [[package]]
 name = "anyio"
-version = "3.5.0"
+version = "3.6.1"
 description = "High level compatibility layer for multiple asynchronous event loop implementations"
 category = "main"
 optional = false
@@ -65,7 +65,7 @@ sniffio = ">=1.1"
 
 [package.extras]
 doc = ["packaging", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
-test = ["coverage[toml] (>=4.5)", "hypothesis (>=4.0)", "pytest (>=6.0)", "pytest-mock (>=3.6.1)", "trustme", "contextlib2", "uvloop (<0.15)", "mock (>=4)", "uvloop (>=0.15)"]
+test = ["coverage[toml] (>=4.5)", "hypothesis (>=4.0)", "pytest (>=7.0)", "pytest-mock (>=3.6.1)", "trustme", "contextlib2", "uvloop (<0.15)", "mock (>=4)", "uvloop (>=0.15)"]
 trio = ["trio (>=0.16)"]
 
 [[package]]
@@ -253,7 +253,7 @@ http = ["httpx"]
 
 [[package]]
 name = "didkit"
-version = "0.0.2"
+version = "0.3.1"
 description = "Library for Verifiable Credentials and Decentralized Identifiers."
 category = "main"
 optional = false
@@ -669,7 +669,7 @@ python-versions = ">=3.6"
 
 [[package]]
 name = "pyhumps"
-version = "3.7.0"
+version = "3.7.1"
 description = "🐫  Convert strings (and dictionary keys) between snake case, camel case and pascal case in Python. Inspired by Humps for Node"
 category = "main"
 optional = false
@@ -1005,7 +1005,7 @@ multidict = ">=4.0"
 [metadata]
 lock-version = "1.1"
 python-versions = "^3.10"
-content-hash = "a94ea017205d5bf70414f331a93c9c6f7cd568397ff33e255ba4a29347b84dc1"
+content-hash = "b796cb05fbca21d157e894899a2610defd664f3ffddb840d40146f3521955920"
 
 [metadata.files]
 aiohttp = [
@@ -1095,8 +1095,8 @@ aiosqlite = [
     {file = "aiosqlite-0.17.0.tar.gz", hash = "sha256:f0e6acc24bc4864149267ac82fb46dfb3be4455f99fe21df82609cc6e6baee51"},
 ]
 anyio = [
-    {file = "anyio-3.5.0-py3-none-any.whl", hash = "sha256:b5fa16c5ff93fa1046f2eeb5bbff2dad4d3514d6cda61d02816dba34fa8c3c2e"},
-    {file = "anyio-3.5.0.tar.gz", hash = "sha256:a0aeffe2fb1fdf374a8e4b471444f0f3ac4fb9f5a5b542b48824475e0042a5a6"},
+    {file = "anyio-3.6.1-py3-none-any.whl", hash = "sha256:cb29b9c70620506a9a8f87a309591713446953302d7d995344d0d7c6c0c9a7be"},
+    {file = "anyio-3.6.1.tar.gz", hash = "sha256:413adf95f93886e442aea925f3ee43baa5a765a64a0f52c6081894f9992fdd0b"},
 ]
 appdirs = [
     {file = "appdirs-1.4.4-py2.py3-none-any.whl", hash = "sha256:a841dacd6b99318a741b166adb07e19ee71a274450e68237b4650ca1055ab128"},
@@ -1186,25 +1186,39 @@ datamodel-code-generator = [
     {file = "datamodel_code_generator-0.11.20-py3-none-any.whl", hash = "sha256:ee2e29cd8be3e15deb6d588f6d1b5bff785a765c72b9d2755bd8ea7affb862b7"},
 ]
 didkit = [
-    {file = "didkit-0.0.2-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:bbc3164182198d3423198f66ab467e625518f2998d5c58e7b554560433728941"},
-    {file = "didkit-0.0.2-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:22f78b66f0f16f1dcbf060ff9c266453e12df6215e83e357ce88cc741884c26e"},
-    {file = "didkit-0.0.2-cp36-cp36m-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:322e054f63a10ce42a18530c07b1c5ccf4bce0edb32576898d978f447ccb62e5"},
-    {file = "didkit-0.0.2-cp36-cp36m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:8408b6c84902ccaff8328df809d7665872735b7543899e412bf83d207637abdf"},
-    {file = "didkit-0.0.2-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:6a825bc52138ffc0802066750ffbddde9d4a3511b5be305bf5a1493889c49f63"},
-    {file = "didkit-0.0.2-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:7957d3debaefe2fc191ef7864eb6e1d3e55488993006322a3456965d343944a0"},
-    {file = "didkit-0.0.2-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:1173ed2a251c220e931d6ffc0c1a102fe5976c1de3fd98d75cce0f357c475b57"},
-    {file = "didkit-0.0.2-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:675cd536fc866edb396697ae55f0964714f13badf1f34c0c489fbcb0a08f86b7"},
-    {file = "didkit-0.0.2-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:29a6109c425d3c24f7458d30f45cc4a5cc08d740c62fe404f53e7de9bb29488d"},
-    {file = "didkit-0.0.2-cp39-cp39-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl", hash = "sha256:f0ecf9b9dc7fcfa471a75f33ee2acc283300258b67226cb097b5810ce54e4bf7"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:6a2354089a5970776715881b04e67bc740c87ccd075890f7fa52338ffd60085a"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:43f96079fc5953efd3ea9c5991e4d69a24b0f02e9feac5dcdc107edd4272c999"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:a8d68e26cfb7d6048f3f494dc011f1f5a9cdae78ed56c432644753e90754580f"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:3a82e93fc4251d1fc4ade635202b7687040d03d2db21ddf985c6d14069f9cf4e"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:bdbec0b7fe4325ab90267e5d0fbb4fd88139ecef6d789c84a40bdd1eace78a26"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:ce85d58ba1705d3ff02036105fcf193f309aea47c7a34eca51009fb103df5824"},
-    {file = "didkit-0.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:7b25efeb615f9c510386178e67cb22428831344e63e19157dbc37f62bb4fc594"},
-    {file = "didkit-0.0.2-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:92b29731c8212e96274226a6211d19fdb6b608bac030e51a7a30bfb3471082a3"},
-    {file = "didkit-0.0.2-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:29491ebd92849ce3b8e282f1cb2f8231c86600f2342f5f5ce110001f6c4e1996"},
+    {file = "didkit-0.3.1-cp310-cp310-macosx_10_7_x86_64.whl", hash = "sha256:8d849efd41291c8731b0c1ddb91c8e1c95d1490d80d66db12ed7f883ae77d722"},
+    {file = "didkit-0.3.1-cp310-cp310-macosx_11_0_arm64.whl", hash = "sha256:d4f007d89154d824dd6f5dc44d5865983676d70e5ed156c7ea71cc9457538451"},
+    {file = "didkit-0.3.1-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:a84d34b9be662be771cbe329debf1d7e37715cc69f83655d9bd11796022f4aa0"},
+    {file = "didkit-0.3.1-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:4130377ebc3c4d9e96cc59b78e47c901206345464dd877ebddd82835f2ada778"},
+    {file = "didkit-0.3.1-cp310-none-win32.whl", hash = "sha256:fdd4279fe7768501d00d0cd98825d392ea671ab6b86c7e56c355ad65dbba4d2a"},
+    {file = "didkit-0.3.1-cp310-none-win_amd64.whl", hash = "sha256:5a80ee8994cbfc447fbcad4fe971d9b31294a5f8a904746e33eb3a56c85d01ea"},
+    {file = "didkit-0.3.1-cp36-cp36m-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:2bf6b1b51796db43b9da1abfb592428080f9e341c5a1b3d1fffd68cc03fbb42d"},
+    {file = "didkit-0.3.1-cp36-cp36m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:29edbf8b6bc124a5ed9d17d358405c7e11cc61a67b6325239267ea9f5d290c8f"},
+    {file = "didkit-0.3.1-cp37-cp37m-macosx_10_7_x86_64.whl", hash = "sha256:c807cfd6eca0fd19c3a8f34f8a0014e3edc9ab32e8930c5044d3e4ef4f6d55c2"},
+    {file = "didkit-0.3.1-cp37-cp37m-macosx_11_0_arm64.whl", hash = "sha256:9ba768400f1e511cb85b9c1c08aeba50118e31c0a62db6fa3066728df868946f"},
+    {file = "didkit-0.3.1-cp37-cp37m-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:23a3ca579b9ade262f08ced066cc5772ff58b95d39df9d9f8b4e1f8e41e46767"},
+    {file = "didkit-0.3.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:2cf5c556fbe2cc1c6de7c878ae7412eef984553d5b26ff5c6c2d25fad35c47d1"},
+    {file = "didkit-0.3.1-cp37-none-win32.whl", hash = "sha256:d3f5500596ba7fefa9a6e00680dfeef9f090cc8b567bf34aae5b9e335a4cc349"},
+    {file = "didkit-0.3.1-cp37-none-win_amd64.whl", hash = "sha256:0fc02710e39bd042eb6cd314f28b80e110e048187bba707272af929b06dd4256"},
+    {file = "didkit-0.3.1-cp38-cp38-macosx_10_7_x86_64.whl", hash = "sha256:48e541ef71311637ad543324acaffe99a1356c3a43ddf0cb18b376582d7d37ed"},
+    {file = "didkit-0.3.1-cp38-cp38-macosx_11_0_arm64.whl", hash = "sha256:92a79e3a52fe5f3f2042c252b0b9ca16afe009636dc21d4e628fcec42422fa0f"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:2a24b998db19f0eb756bd52de82c406b9b11e06523c7ff3eccecf6b8cf331d20"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:507caee78dcd892227a56baa309d5d764dcab53aaca9b4af5c1f7c62f5dca459"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl", hash = "sha256:69007a00bc05f2b73d7011078a29be2489cb7b6278b2f6c3d0e8c409c998a14b"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl", hash = "sha256:e50233a80116625bbcb0961198d0337725e44d30280b6f9b9c8f26a5a0c66e45"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_17_ppc64.manylinux2014_ppc64.whl", hash = "sha256:f9aa32fac56b8247870868e79bc26e08995af280cc73c5e81f4cff5a9c8aaf01"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl", hash = "sha256:368fa1ed0faec05872612d0aa43cd1fa4c197302fcf623498fc86b6df94a52b9"},
+    {file = "didkit-0.3.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl", hash = "sha256:f7baed9201a72aff4a2ec648d7bdc6517960e39a8036b683eb4ebbd0be9b8e86"},
+    {file = "didkit-0.3.1-cp38-none-win32.whl", hash = "sha256:59b593e8012a46f2456de5979ee6b67e9e003b35c20a9321e00f0ac086130b13"},
+    {file = "didkit-0.3.1-cp38-none-win_amd64.whl", hash = "sha256:d4db8f84b05acd21b8c2db60dfd87b57da02c0ba8c2c6d7a0d5a7eb77e67008f"},
+    {file = "didkit-0.3.1-cp39-cp39-macosx_10_7_x86_64.whl", hash = "sha256:8e76163b07ada5d8e9f92ba499e4c1a49e5317fec1766350d19487e8dd963f0c"},
+    {file = "didkit-0.3.1-cp39-cp39-macosx_11_0_arm64.whl", hash = "sha256:fded92270c38ed0edac7aa0a1e32f544fd42d99d331ec31ea0114a194e60be87"},
+    {file = "didkit-0.3.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:0b44935657da085b63647bf892c4caac8c983ba3d57464881b48e08fda8b02d4"},
+    {file = "didkit-0.3.1-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:b4a2679d4c81c51630bdf71a00c0cdda149962877d716a7eeb9b9424fc99ca26"},
+    {file = "didkit-0.3.1-cp39-none-win32.whl", hash = "sha256:0bf19be1d5af81af0da08bc18dca515b33b19b724d3e2a544abb7f3cdedcbc21"},
+    {file = "didkit-0.3.1-cp39-none-win_amd64.whl", hash = "sha256:30e84bb44e4f06f96b92cb9746be4d302f86dab3417d8ca2be773785957e4036"},
+    {file = "didkit-0.3.1-pp37-pypy37_pp73-manylinux_2_12_i686.manylinux2010_i686.whl", hash = "sha256:02d94a038d227304e9ed2060d35de6b56e096a3b6c720fcd8d95c82f53eca20e"},
+    {file = "didkit-0.3.1-pp37-pypy37_pp73-manylinux_2_12_x86_64.manylinux2010_x86_64.whl", hash = "sha256:47023bfe6b585b41fe978861ea5d5c8f51ed7453ce692a251d4413325e07c348"},
 ]
 dipdup = [
     {file = "dipdup-5.1.1-py3-none-any.whl", hash = "sha256:86ee3e10fb1b9a90dbb02d081f6437162e55fb5b7a82f15b37cddddc97d73492"},
@@ -1607,8 +1621,8 @@ pygments = [
     {file = "Pygments-2.12.0.tar.gz", hash = "sha256:5eb116118f9612ff1ee89ac96437bb6b49e8f04d8a13b514ba26f620208e26eb"},
 ]
 pyhumps = [
-    {file = "pyhumps-3.7.0-py3-none-any.whl", hash = "sha256:20bd389462108c70172a826effb71de5383cb0eff4797d69658e799cc57160a1"},
-    {file = "pyhumps-3.7.0.tar.gz", hash = "sha256:711c5777e503c013551205689d1e6c60fab48fb9d3f2e4172c6728b7b9d5e651"},
+    {file = "pyhumps-3.7.1-py3-none-any.whl", hash = "sha256:c6f2d833f2c7afae039d71b7dc0aba5412ae5b8c8c33d4a208c1d412de17229e"},
+    {file = "pyhumps-3.7.1.tar.gz", hash = "sha256:5616f0afdbc73ef479fa9999f4abdcb336a0232707ff1a0b86e29fc9339e18da"},
 ]
 pypika-tortoise = [
     {file = "pypika-tortoise-0.1.4.tar.gz", hash = "sha256:f4b4e6c72fc13f49058181928e66930b59fee988823c8fd01498f95e2ff788ca"},
diff --git a/api/indexer/pyproject.toml b/api/indexer/pyproject.toml
index 557b461..b0bad0c 100644
--- a/api/indexer/pyproject.toml
+++ b/api/indexer/pyproject.toml
@@ -11,7 +11,7 @@ dipdup = "^5.1.1"
 # dipdup = {path = "../../../dipdup", develop = true}
 # dipdup = {git = "https://github.com/dipdup-net/dipdup-py.git", branch = "fix/buffer-corruption"}
 tenacity = "^8.0.1"
-didkit = "0.0.2"
+didkit = "0.3.1"
 
 [tool.poetry.dev-dependencies]
 black = "^22.1.0"
diff --git a/api/indexer/tzprofiles_indexer/cli.py b/api/indexer/tzprofiles_indexer/cli.py
deleted file mode 100644
index ff7fcfe..0000000
--- a/api/indexer/tzprofiles_indexer/cli.py
+++ /dev/null
@@ -1,42 +0,0 @@
-import asyncio
-import logging
-from contextlib import AsyncExitStack
-from unittest.mock import MagicMock
-
-import asyncclick as click
-from dipdup.cli import cli, cli_wrapper
-from dipdup.config import DipDupConfig
-from dipdup.context import DipDupContext
-from dipdup.utils.database import tortoise_wrapper
-
-from tzprofiles_indexer.handlers import resolve_profile
-from tzprofiles_indexer.models import TZProfile
-
-
-@cli.command(help='Run resolver')
-@click.pass_context
-@cli_wrapper
-async def resolver(ctx):
-    config: DipDupConfig = ctx.obj.config
-    url = config.database.connection_string
-    models = f'{config.package}.models'
-
-    async with AsyncExitStack() as stack:
-        await stack.enter_async_context(tortoise_wrapper(url, models))
-        dipdup_ctx = DipDupContext({}, config, MagicMock())
-        while True:
-            async for profile in TZProfile.filter(resolved=False):
-                logging.info(f'Resolving profile {profile.contract}')
-                await resolve_profile(profile)
-                await profile.save()
-                await dipdup_ctx.update_contract_metadata(
-                    network='mainnet',
-                    address=profile.contract,
-                    metadata=profile.metadata,
-                )
-
-            await asyncio.sleep(1)
-
-
-if __name__ == '__main__':
-    cli(prog_name='dipdup', standalone_mode=False)  # type: ignore
diff --git a/api/indexer/tzprofiles_indexer/handlers/on_factory_origination.py b/api/indexer/tzprofiles_indexer/handlers/on_factory_origination.py
index 5f5e0eb..854b420 100644
--- a/api/indexer/tzprofiles_indexer/handlers/on_factory_origination.py
+++ b/api/indexer/tzprofiles_indexer/handlers/on_factory_origination.py
@@ -5,8 +5,11 @@ from dipdup.models import Origination
 
 import tzprofiles_indexer.models as models
 from tzprofiles_indexer.handlers import save_claims
+from tzprofiles_indexer.models import locks
 from tzprofiles_indexer.types.tzprofile.storage import TzprofileStorage
 
+import asyncio
+
 
 async def on_factory_origination(
     ctx: HandlerContext,
@@ -25,8 +28,11 @@ async def on_factory_origination(
         values=dict(contract=originated_contract),
     )
 
+    contract = tzprofile_origination.data.originated_contract_address
+    locks[contract] = asyncio.Lock()
+
     profile, _ = await models.TZProfile.get_or_create(
         account=tzprofile_origination.storage.owner,
-        defaults={"contract": tzprofile_origination.data.originated_contract_address},
+        defaults={"contract": contract},
     )
     await save_claims(profile, tzprofile_origination.storage.claims)
diff --git a/api/indexer/tzprofiles_indexer/handlers/on_update.py b/api/indexer/tzprofiles_indexer/handlers/on_update.py
index 07e0411..175e287 100644
--- a/api/indexer/tzprofiles_indexer/handlers/on_update.py
+++ b/api/indexer/tzprofiles_indexer/handlers/on_update.py
@@ -3,14 +3,21 @@ from dipdup.models import Transaction
 
 import tzprofiles_indexer.models as models
 from tzprofiles_indexer.handlers import save_claims
+from tzprofiles_indexer.models import locks
 from tzprofiles_indexer.types.tzprofile.parameter.default import DefaultParameter
 from tzprofiles_indexer.types.tzprofile.storage import TzprofileStorage
 
+import asyncio
+
 
 async def on_update(
     ctx: HandlerContext,
     tzprofile_update: Transaction[DefaultParameter, TzprofileStorage],
 ) -> None:
+    contract = tzprofile_update.data.target_address
     profile = await models.TZProfile.get(account=tzprofile_update.storage.owner)
-    if profile.contract == tzprofile_update.data.target_address:
-        await save_claims(profile, tzprofile_update.storage.claims)
+    if profile.contract == contract:
+        # Atomic in CPython
+        lock = locks.setdefault(contract, asyncio.Lock())
+        async with lock:
+            await save_claims(profile, tzprofile_update.storage.claims)
diff --git a/api/indexer/tzprofiles_indexer/hooks/resolver.py b/api/indexer/tzprofiles_indexer/hooks/resolver.py
new file mode 100644
index 0000000..81a71c8
--- /dev/null
+++ b/api/indexer/tzprofiles_indexer/hooks/resolver.py
@@ -0,0 +1,35 @@
+import asyncio
+import logging
+from unittest.mock import MagicMock
+
+from dipdup.config import DipDupConfig
+from dipdup.context import DipDupContext
+from dipdup.context import HookContext
+
+from tzprofiles_indexer.handlers import resolve_profile
+from tzprofiles_indexer.models import TZProfile, locks
+
+async def resolver(
+    ctx: HookContext,
+) -> None:
+    dipdup_ctx = DipDupContext({}, ctx.config, MagicMock())
+    logging.warning('Collecting profiles')
+    profiles = [(profile.account, profile.contract) async for profile in TZProfile.filter(resolved=False)]
+    for (account, contract) in profiles:
+        logging.warning(f'Resolving profile {contract}')
+        # Atomic in CPython
+        lock = locks.setdefault(contract, asyncio.Lock())
+        async with lock:
+            logging.warning('Lock acquired')
+            profile = await TZProfile.get(account=account)
+            logging.warning('Got profiles')
+            await resolve_profile(profile)
+            logging.warning('Resolved profiles')
+            await profile.save()
+            logging.warning('Saved profiles')
+            await dipdup_ctx.update_contract_metadata(
+                network='mainnet',
+                address=profile.contract,
+                metadata=profile.metadata,
+            )
+        logging.warning('Lock released')
diff --git a/api/indexer/tzprofiles_indexer/models.py b/api/indexer/tzprofiles_indexer/models.py
index 6c031df..a4d6a9c 100644
--- a/api/indexer/tzprofiles_indexer/models.py
+++ b/api/indexer/tzprofiles_indexer/models.py
@@ -55,3 +55,5 @@ class TZProfile(Model):
 
     class Meta:
         table = 'tzprofiles'
+
+locks = {}
diff --git a/api/indexer/tzprofiles_indexer/sql/resolver/.keep b/api/indexer/tzprofiles_indexer/sql/resolver/.keep
new file mode 100644
index 0000000..e69de29
-- 
2.32.0 (Apple Git-132)

